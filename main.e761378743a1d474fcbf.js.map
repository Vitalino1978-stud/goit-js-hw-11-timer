{"version":3,"sources":["webpack:///./index.js"],"names":["refs","days","document","querySelector","hours","mins","secs","selector","targetDate","this","getTimeComponents","time","Math","floor","init","setInterval","currentTime","Date","now","deltaTime","updateTimerFace","textContent"],"mappings":"2FAAA,qBACMA,EAAO,CACXC,KAAMC,SAASC,cAAc,uBAC7BC,MAAOF,SAASC,cAAc,wBAC9BE,KAAMH,SAASC,cAAc,uBAC7BG,KAAMJ,SAASC,cAAc,wBAmChB,I,WA7Bb,cAAsC,EAAxBI,SAAwB,IAAdC,EAAc,EAAdA,WACtBC,KAAKD,WAAaA,E,2BAEpBE,kBAAA,SAAkBC,GAKhB,MAAO,CAACV,KAJKW,KAAKC,MAAMF,EAAO,OAIjBP,MAHAQ,KAAKC,MAAOF,EAAO,MAAR,MAGJN,KAFRO,KAAKC,MAAOF,EAAO,KAAR,KAEGL,KADdM,KAAKC,MAAOF,EAAO,IAAe,O,EAGjDG,KAAA,WAAO,WACLC,aAAY,WACV,IAAMC,EAAcC,KAAKC,MACnBC,EAAY,EAAKX,WAAaQ,EAE9BL,EAAO,EAAKD,kBAAkBS,GACtC,EAAKC,gBAAgBT,KAClB,M,EAGLS,gBAAA,YAA6C,IAA3BnB,EAA2B,EAA3BA,KAAMG,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KACnCN,EAAKC,KAAKoB,YAAcpB,EACxBD,EAAKI,MAAMiB,YAAcjB,EACzBJ,EAAKK,KAAKgB,YAAchB,EACxBL,EAAKM,KAAKe,YAAcf,G,KAKb,CAAmB,CAChCC,SAAU,WACVC,WAAY,IAAIS,KAAK,kBAIhBH,Q","file":"main.e761378743a1d474fcbf.js","sourcesContent":["import '../style.css'\r\nconst refs = {\r\n  days: document.querySelector('[data-value=\"days\"]'),\r\n  hours: document.querySelector('[data-value=\"hours\"]'),\r\n  mins: document.querySelector('[data-value=\"mins\"]'),\r\n  secs: document.querySelector('[data-value=\"secs\"]')\r\n\r\n}\r\n// console.log(refs.days);\r\n\r\nclass CountdownTimer {\r\n  constructor({ selector, targetDate }) {\r\n    this.targetDate = targetDate;\r\n  }\r\n  getTimeComponents(time) {\r\n    const days = Math.floor(time / (1000 * 60 * 60 * 24));\r\n    const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n    const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\r\n    const secs = Math.floor((time % (1000 * 60)) / 1000);\r\n    return {days, hours, mins, secs}\r\n }\r\n  init() {\r\n    setInterval(() => {\r\n      const currentTime = Date.now();\r\n      const deltaTime = this.targetDate - currentTime;\r\n       \r\n      const time = this.getTimeComponents(deltaTime);\r\n    this.updateTimerFace(time)\r\n    }, 1000)\r\n  }\r\n\r\n  updateTimerFace({ days, hours, mins, secs }) {\r\n    refs.days.textContent = days;\r\n    refs.hours.textContent = hours;\r\n    refs.mins.textContent = mins;\r\n    refs.secs.textContent = secs;\r\n  }\r\n   \r\n}\r\n\r\nconst timer1 = new CountdownTimer({\r\n  selector: '#timer-1',\r\n  targetDate: new Date('Apr 12, 2021'),\r\n  });\r\n\r\n// console.log(timer1);\r\ntimer1.init();"],"sourceRoot":""}